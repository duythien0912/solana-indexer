name: Heroku (staging)

on:
  push:
    branches: [main, dev, deploy_config, debug_validator]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
            ${{ runner.os }}-cargo

      - name: Geyser consumer
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          email: duythien0914@gmail.com
          heroku_api_key: 2426998e-e06d-4018-93a9-6aba380df29c
          heroku_app_name: accounts-db-consumer-staging
          dockerfile_name: Dockerfile
          docker_options: '--target geyser-consumer'
          process_type: worker

      - name: HTTP consumer
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          email: duythien0914@gmail.com
          heroku_api_key: 2426998e-e06d-4018-93a9-6aba380df29c
          heroku_app_name: accounts-db-http-consumer-staging
          dockerfile_name: Dockerfile
          docker_options: '--target http-consumer'
          process_type: worker

      - name: GraphQL server
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          email: duythien0914@gmail.com
          heroku_api_key: 2426998e-e06d-4018-93a9-6aba380df29c
          heroku_app_name: indexer-graphql-staging
          dockerfile_name: Dockerfile
          docker_options: '--target graphql'
